# Generated by Django 5.2 on 2025-08-28 10:55

import dating.validators
import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("username", models.CharField(blank=True, max_length=150)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("first_name", models.CharField(max_length=30, verbose_name="Имя")),
                ("last_name", models.CharField(max_length=30, verbose_name="Фамилия")),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Мужской"), ("F", "Женский"), ("O", "Другой")],
                        max_length=1,
                        verbose_name="Пол",
                    ),
                ),
                (
                    "age",
                    models.PositiveIntegerField(
                        validators=[dating.validators.validate_age],
                        verbose_name="Возраст",
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        max_length=100,
                        validators=[dating.validators.validate_city],
                        verbose_name="Город",
                    ),
                ),
                ("hobbies", models.TextField(blank=True, verbose_name="Увлечения")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("looking", "В поиске"),
                            ("busy", "Занят"),
                            ("complicated", "Все сложно"),
                        ],
                        default="looking",
                        max_length=20,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "likes_count",
                    models.PositiveIntegerField(default=0, verbose_name="Лайки"),
                ),
                (
                    "is_private",
                    models.BooleanField(
                        default=False, verbose_name="Приватный профиль"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пользователь",
                "verbose_name_plural": "Пользователи",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Match",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активный"),
                ),
                ("last_interaction", models.DateTimeField(auto_now=True)),
                (
                    "users",
                    models.ManyToManyField(
                        related_name="matches",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователи",
                    ),
                ),
            ],
            options={
                "verbose_name": "Мэтч",
                "verbose_name_plural": "Мэтчи",
                "ordering": ["-last_interaction"],
            },
        ),
        migrations.CreateModel(
            name="ContactExchange",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "contact_info",
                    models.TextField(verbose_name="Контактная информация"),
                ),
                ("message", models.TextField(blank=True, verbose_name="Сообщение")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "accepted",
                    models.BooleanField(default=False, verbose_name="Принято"),
                ),
                ("accepted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "initiator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="initiated_contacts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Инициатор",
                    ),
                ),
                (
                    "match",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contact_exchanges",
                        to="dating.match",
                        verbose_name="Мэтч",
                    ),
                ),
            ],
            options={
                "verbose_name": "Обмен контактами",
                "verbose_name_plural": "Обмены контактами",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserInteraction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "interaction_type",
                    models.CharField(
                        choices=[
                            ("like", "Лайк"),
                            ("dislike", "Дизлайк"),
                            ("view", "Просмотр"),
                        ],
                        max_length=10,
                        verbose_name="Тип взаимодействия",
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "from_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_interactions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="От пользователя",
                    ),
                ),
                (
                    "to_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_interactions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="К пользователю",
                    ),
                ),
            ],
            options={
                "verbose_name": "Взаимодействие",
                "verbose_name_plural": "Взаимодействия",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="UserPhoto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "photo",
                    models.ImageField(
                        upload_to="user_photos/%Y/%m/%d/", verbose_name="Фотография"
                    ),
                ),
                (
                    "is_main",
                    models.BooleanField(default=False, verbose_name="Главное фото"),
                ),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "description",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Описание"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="photos",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Фотография пользователя",
                "verbose_name_plural": "Фотографии пользователей",
                "ordering": ["-is_main", "uploaded_at"],
            },
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["gender", "age", "city", "status"],
                name="dating_user_gender_0c55e2_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["-likes_count"], name="dating_user_likes_c_098239_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="userinteraction",
            index=models.Index(
                fields=["from_user", "interaction_type"],
                name="dating_user_from_us_5d1dfc_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="userinteraction",
            index=models.Index(
                fields=["to_user", "interaction_type"],
                name="dating_user_to_user_8de93d_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="userinteraction",
            index=models.Index(
                fields=["timestamp"], name="dating_user_timesta_cff38c_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="userinteraction",
            unique_together={("from_user", "to_user", "interaction_type")},
        ),
    ]
